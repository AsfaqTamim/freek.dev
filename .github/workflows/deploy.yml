name: Deploy

on:
    push:
        branches:
            - production
env:
    repository: 'spatie/freek.dev'
    baseDir: '/home/forge/freek-test.dev'
    newReleaseName: '${{ github.run_id }}'
jobs:
    deploy:
        name: Deploy

        runs-on: ubuntu-latest

        steps:
            -   name: Set releases dir env
                run: |
                    echo "releasesDir=${{ env.baseDir }}/releases" >> $GITHUB_ENV
            -   name: Set env
                run: |
                    echo "releasesDir=${{ env.baseDir }}/releases" >> $GITHUB_ENV
                    echo "persistentDir=${{ env.baseDir }}/persistent" >> $GITHUB_ENV
                    echo "currentDir=${{ env.baseDir }}/current" >> $GITHUB_ENV
                    echo "newReleaseDir=${{ env.releasesDir }}/${{ env.newReleaseName }}" >> $GITHUB_ENV

            -   name: ðŸŒ€ Clone repository
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: forge
                    key: ${{ secrets.KEY }}
                    script: |
                        [ -d ${{ env.releasesDir }} ] || mkdir ${{ env.releasesDir }}
                        [ -d ${{ env.persistentDir }}/uploads ] || mkdir ${{ env.persistentDir }}/uploads
                        [ -d ${{ env.persistentDir }}/storage ] || mkdir ${{ env.persistentDir }}/storage

                        # Create new directory
                        mkdir ${{ env.newReleaseDir }}

                        # Clone directory
                        git clone --depth 1 git@github.com:${{ env.repository }} ${{ env.newReleaseName }}

                        # Configure sparse checkout
                        cd {{ $newReleaseDir }}
                        git config core.sparsecheckout true
                        echo "*" > .git/info/sparse-checkout
                        echo "!storage" >> .git/info/sparse-checkout
                        echo "!public/build" >> .git/info/sparse-checkout
                        git read-tree -mu HEAD

                        # Mark release
                        cd {{ $newReleaseDir }}
                        echo "${{ env.newReleaseName }}" > public/release-name.txt

            -   name: ðŸšš Run composer
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: forge
                    key: ${{ secrets.KEY }}
                    script: |
                        cd ${{ env.newReleaseDir }}
                        ln -nfs ${{ env.baseDir }}/auth.json auth.json;
                        composer install --prefer-dist --no-scripts --no-dev -q -o;
                        php artisan nova:publish

            -   name: ðŸ“¦ Run yarn
                uses: appleboy/ssh-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: forge
                    key: ${{ secrets.KEY }}
                    script: |
                        cd ${{ env.newReleaseDir }};
                        yarn config set ignore-engines true
                        yarn


